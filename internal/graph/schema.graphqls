type Delivery {
    id: String!
    parcel: Parcel!
    rider: Rider
    pickupPoint: Location!
    pickupTime: Int!
    route: [Location]
    deliveryPoint: Location!
    deliveryTime: Int
    Status: Int!
}

type Parcel{
    id: String!
    name: String!
}

type Rider {
    id: String!
    name: String!
}

type Location  {
    latitude: Float!
    longitude: Float!
}

input DeliveryInput {
    parcelId: String!
    pickupPoint: LocationInput!
    pickupTime: Int!
    deliveryPoint: LocationInput!
}

input LocationInput {
    latitude: Float!
    longitude: Float!
}

type Query {
    deliveries: [Delivery]!
    delivery(id: String!): Delivery
}

type Mutation {
    createDelivery(input: DeliveryInput!): Delivery
    assignRider(id: String!, input: String): Delivery
    completeDelivery(id: String!): Delivery
}